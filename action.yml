name: AWS ECR Security Report
branding:
  icon: alert-octagon
  color: gray-dark
description: Retrieve scan results for a Docker image stored in AWS ECR and fail if vulnerabilities are found.
inputs:
  repository:
    description: ECR repository, eg myorg/myimage.
    required: true
  tag:
    description: Image tag to scan.
    required: true
  fail_threshold:
    description: >
      Fail if any vulnerabilities equal to or above this severity level are detected.
      Valid values: critical, high, medium, low, informational undefined, none.
    default: critical
  region:
    description: AWS region where the ECR repository is located.
    default: us-east-2
  ignore_list:
    description: List of CVE IDs to ignore in the vulnerability findings.
    default: ""
  pr_comment:
    description: Whether to post a comment on the PR with the scan results.
    default: true
  max_retries:
    description: Maximum number of retries for the scan command.
    default: 3
  retry_delay:
    description: Delay in seconds between retries for the scan command.
    default: 5
outputs:
  critical:
    description: Number of critical vulnerabilities detected.
  high:
    description: Number of high vulnerabilities detected.
  medium:
    description: Number of medium vulnerabilities detected.
  low:
    description: Number of low vulnerabilities detected.
  informational:
    description: Number of informational vulnerabilities detected.
  undefined:
    description: Number of undefined severity vulnerabilities detected.
  total:
    description: Total number of vulnerabilities detected.
  detailed_findings:
    description: Detailed findings of the scan.

runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        activate-environment: true
    - name: Install dependencies with uv
      shell: bash
      run: uv pip install ${{ github.action_path }}
    - name: Pull Scan Results
      id: scan
      shell: bash
      run: |
        ecr-scan '${{ inputs.repository }}' \
                 '${{ inputs.tag }}' \
                 --github_action \
                 --fail-threshold='${{ inputs.fail_threshold }}' \
                 --ignore-list='${{ inputs.ignore_list }}' \
                 --region='${{ inputs.region }}' \
                 --max-retries='${{ inputs.max_retries }}' \
                 --retry-delay='${{ inputs.retry_delay }}'
    - name: PR Feedback Comment
      if: |
        inputs.pr_comment &&
        steps.scan.outputs.total != '0' &&
        github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body:  ${{ steps.scan.outputs.markdown_report }}
    - name: Fail if scan failed
      if: steps.scan.outputs.outcome == 'failure'
      shell: bash
      run: exit 1
